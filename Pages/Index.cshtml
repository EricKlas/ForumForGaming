@page
@using Models;
@model IndexModel
@inject SignInManager<ApplicationUser> SignInManager
@inject UserManager<ApplicationUser> UserManager

@{
    ViewData["Title"] = "Home page";
    var user = await UserManager.GetUserAsync(User);
}
<body class="indexbody">
    @if (Model.Post != null)
    {
        <div class="card background-color">
            <div class="card-header">
                <h2>@Model.Post.Title</h2>
            </div>
            <ul class="list-group list-group-flush">
                @foreach (var comment in Model.Comments)
                {
                    if (comment.PostId == Model.Post.Id)
                    {
                        var commentUser = await UserManager.FindByIdAsync(comment.UserId);
                        var replaytext = Model.Comments.FirstOrDefault(c => c.Id == comment.ReplyToId);
                        <li class="list-group-item background-color">
                            @if (comment.TextContent == "Comment has been deleted by user!" || comment.TextContent == "Comment has been deleted!")
                            {
                                <img class="card-img-top profile-border" src="~/profileImages/DefaultImage.jpg" />
                                <label class="comment-username">Deleted User</label>
                                <label class="comment-date"> @comment.CreatedDate</label>
                                <br />
                                <label class="comment">@comment.TextContent</label>
                            }
                            else
                            {
                                <img class="card-img-top profile-border" src="~/profileImages/@commentUser.ProfilePicture" />
                                <label class="comment-username">@commentUser.UserName</label>
                                <label class="comment-date"> @comment.CreatedDate</label>
                                <br />
                                <label class="comment">@comment.TextContent</label>
                            }
                            @if (replaytext != null)
                            {
                                @if (replaytext.TextContent == "Comment has been deleted by user!" || replaytext.TextContent == "Comment has been deleted!")
                                {
                                    <br />
                                    <span class="list-group-item gray-background">
                                        <img class="card-img-top profile-border" src="~/profileImages/DefaultImage.jpg" />
                                        <label> Deleted user, Datum: @replaytext.CreatedDate</label>
                                        <br />
                                        <label class="comment">@replaytext.TextContent</label>
                                    </span>
                                }
                                else
                                {
                                    <br />
                                    var replayuser = await UserManager.FindByIdAsync(replaytext.UserId);
                                    <span class="list-group-item gray-background">
                                        <img class="card-img-top profile-border" src="~/profileImages/DefaultImage.jpg" />
                                        <label> @replayuser, Datum: @replaytext.CreatedDate</label>
                                        <br />
                                        <label class="comment">@replaytext.TextContent</label>
                                    </span>
                                }
                            }

                            @if (user != null)
                            {
                                <br />
                                <br />
                                <a asp-page="./Index" asp-route-postId="@Model.Post.Id" asp-route-replayTextId="@comment.Id" class="btn background-color-darker">Reply</a>
                                <a asp-route-reportCommentId="@comment.Id" class="btn background-color-darker">Report Comment</a>
                                @if (user.Id == comment.UserId)
                                {
                                    <a asp-route-deleteCommentId="@comment.Id" class="btn background-color-darker">Ta bort</a>
                                }
                            }
                        </li>
                    }
                }
            </ul>

            @if (SignInManager.IsSignedIn(User))
            {
                <div class="CommentBox">
                    <form method="post" enctype="multipart/form-data" class="form-postion">
                        <label asp-for="Comment.TextContent">Skriv din kommentar här: </label>
                        <br />
                        <textarea asp-for="Comment.TextContent" type="text" class="form-contrl limited-width-textarea" cols="70" rows="3"></textarea>
                        <br />
                        <input type="hidden" name="postId" value="@Model.Post.Id" />
                        <input type="hidden" name="replyToId" value="@Model.ReplayId" />
                        <input type="submit" name="add" class="btn background-color-darker" value="Post Comment" />
                    </form>
                </div>
            }
        </div>
    }
    else if (Model.SubCategory != null)
    {
        <div class="card background-color">
            <div class="card-header">
                <h2>@Model.SubCategory.Name</h2>
            </div>
            @if (user != null)
            {
                <form method="post" enctype="multipart/form-data" class="form-postion">
                    <label asp-for="Post.Title"></label>
                    <br />
                    <input asp-for="Post.Title" />
                    <br />
                    <label asp-for="Comment.TextContent"></label>
                    <textarea asp-for="Comment.TextContent" type="text" class="form-control limited-width-textarea" cols="25" rows="2"></textarea>
                    <br />
                    <input type="hidden" name="subCategoryId" value="@Model.SubCategory.Id" />
                    <input type="submit" name="add" class="btn background-color-darker" value="Create Post" />
                </form>
            }
            <br />
            <table class="background-color-darker-table">
                <thead>
                    <tr>
                        <th>Titel</th>
                        <th>Författare</th>
                        <th>Skapad</th>
                        <th></th>
                        <th></th>
                    </tr>
                </thead>

                <tbody>
                    @foreach (var post in Model.Posts)
                    {
                        if (post.SubCategoryId == Model.SubCategory.Id)
                        {
                            var postUser = await UserManager.FindByIdAsync(post.UserId);
                            <tr data-href="@Url.Action("PostClicked", new { postId = post.Id })" class="clickable-row background-color-darker">
                                <td class="posttext">@post.Title</td>
                                <td class="author">@postUser.UserName</td>
                                <td class="created">@post.CreatedDate.ToString("yyyy-MM-dd")</td>
                                @if (user != null && user.Id == post.UserId && post.SubCategoryId == Model.SubCategory.Id)
                                {
                                    <td class="postbtn"><a asp-route-deletePostId="@post.Id" class="btn admin-background-hover">Remove</a></td>

                                }
                                @if (user != null && post.SubCategoryId == Model.SubCategory.Id)
                                {
                                    <td class="postbtn"><a asp-route-reportPostId="@post.Id" class="btn admin-background-hover">Report</a></td>
                                }
                            </tr>
                        }
                    }
                </tbody>
            </table>
        </div>
    }
    else
    {
        @foreach (var category in Model.MainCategories)
        {
            if (category.Archived != true)
            {
                <div class="card background-color">
                    <div class="card-header">
                        <h2>@category.Title</h2>
                        <br />
                        <label>@category.Description</label>
                    </div>
                    <table class="background-color-darker-table">
                        <tbody>
                            @foreach (var subCategory in Model.SubCategories)
                            {
                                if (category.Id == subCategory.MainCategoryId && subCategory.Archived == false)
                                {
                                    <tr data-href="@Url.Action("PostClicked", new { subCategoryId = subCategory.Id })" class="clickable-row tr-link background-color-darker">
                                        <td class="posttext">@subCategory.Name</td>
                                    </tr>
                                }
                            }
                        </tbody>
                    </table>
                </div>
            }
        }
    }
    }
</body>